# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-07-13 13:54
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app', '0003_auto_20170712_1810'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClientProject',
            fields=[
                ('id', models.UUIDField(db_column='id', primary_key=True, serialize=False)),
                ('version', models.UUIDField(db_column='version')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='creation_date')),
                ('name', models.CharField(db_column='name', max_length=100, verbose_name='наименование')),
                ('description', models.TextField(db_column='description', verbose_name='описание')),
                ('client', models.ForeignKey(db_column='client', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='заказчик')),
            ],
            options={
                'verbose_name_plural': 'проекты заказчиков',
                'db_table': 'client_project',
                'verbose_name': 'проект заказчика',
            },
        ),
        migrations.CreateModel(
            name='ClientProjectComment',
            fields=[
                ('id', models.UUIDField(db_column='id', primary_key=True, serialize=False)),
                ('version', models.UUIDField(db_column='version')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='creation_date')),
                ('text', models.TextField(db_column='text', verbose_name='текст комментария')),
                ('client_project', models.ForeignKey(db_column='client_project', on_delete=django.db.models.deletion.CASCADE, to='app.ClientProject', verbose_name='проект заказчика')),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name_plural': 'комментарии к проектам заказчиков',
                'db_table': 'client_project_comment',
                'verbose_name': 'комментарий к проекту заказчика',
            },
        ),
        migrations.CreateModel(
            name='ClientProjectStatusForClient',
            fields=[
                ('id', models.UUIDField(db_column='id', primary_key=True, serialize=False)),
                ('version', models.UUIDField(db_column='version')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='creation_date')),
                ('name', models.CharField(db_column='name', max_length=100, verbose_name='наименование')),
                ('is_closed', models.BooleanField(db_column='is_closed', verbose_name='это закрывающий проект статус')),
                ('client', models.ForeignKey(db_column='client', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='заказчик')),
            ],
            options={
                'verbose_name_plural': 'статусы проектов заказчиков для заказчиков',
                'db_table': 'client_project_status_for_client',
                'verbose_name': 'статус проекта заказчика для заказчика',
            },
        ),
        migrations.CreateModel(
            name='ClientProjectStatusForClientInfo',
            fields=[
                ('id', models.UUIDField(db_column='id', primary_key=True, serialize=False)),
                ('version', models.UUIDField(db_column='version')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='creation_date')),
                ('status', models.ForeignKey(db_column='status', on_delete=django.db.models.deletion.CASCADE, to='app.ClientProjectStatusForClient', verbose_name='статус')),
                ('сlient_project', models.ForeignKey(db_column='client_project', on_delete=django.db.models.deletion.CASCADE, to='app.ClientProject', verbose_name='проект заказчика')),
            ],
            options={
                'verbose_name_plural': 'строки истории статусов проектов заказчиков для заказчиков',
                'db_table': 'client_project_status_for_client_info',
                'verbose_name': 'строка истории статусов проекта заказчика для заказчика',
            },
        ),
        migrations.CreateModel(
            name='ClientProjectStatusForContractor',
            fields=[
                ('id', models.UUIDField(db_column='id', primary_key=True, serialize=False)),
                ('version', models.UUIDField(db_column='version')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='creation_date')),
                ('name', models.CharField(db_column='name', max_length=100, verbose_name='наименование')),
                ('is_closed', models.BooleanField(db_column='is_closed', verbose_name='это закрывающий проект статус')),
                ('contractor', models.ForeignKey(db_column='contractor', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='исполнитель')),
            ],
            options={
                'verbose_name_plural': 'статусы проектов заказчиков для исполнителей',
                'db_table': 'client_project_status_for_contractor',
                'verbose_name': 'статус проекта заказчика для исполнителя',
            },
        ),
        migrations.CreateModel(
            name='ClientProjectStatusForContractorInfo',
            fields=[
                ('id', models.UUIDField(db_column='id', primary_key=True, serialize=False)),
                ('version', models.UUIDField(db_column='version')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='creation_date')),
                ('status', models.ForeignKey(db_column='status', on_delete=django.db.models.deletion.CASCADE, to='app.ClientProjectStatusForContractor', verbose_name='статус')),
                ('сlient_project', models.ForeignKey(db_column='client_project', on_delete=django.db.models.deletion.CASCADE, to='app.ClientProject', verbose_name='проект заказчика')),
            ],
            options={
                'verbose_name_plural': 'строки истории статусов проектов заказчиков для исполнителей',
                'db_table': 'client_project_status_for_contractor_info',
                'verbose_name': 'строка истории статусов проекта заказчика для исполнителя',
            },
        ),
        migrations.CreateModel(
            name='ContractorProject',
            fields=[
                ('id', models.UUIDField(db_column='id', primary_key=True, serialize=False)),
                ('version', models.UUIDField(db_column='version')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='creation_date')),
                ('name', models.CharField(db_column='name', max_length=100, verbose_name='наименование')),
                ('description', models.TextField(db_column='description', verbose_name='описание')),
                ('client_project', models.ForeignKey(db_column='client_project', on_delete=django.db.models.deletion.CASCADE, to='app.ClientProject', verbose_name='проект заказчика')),
            ],
            options={
                'verbose_name_plural': 'проекты исполнителей',
                'db_table': 'contractor_project',
                'verbose_name': 'проект исполнителя',
            },
        ),
        migrations.RemoveField(
            model_name='comment',
            name='task',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='user',
        ),
        migrations.RemoveField(
            model_name='statusforclient',
            name='client',
        ),
        migrations.RemoveField(
            model_name='statusforclientinfo',
            name='status',
        ),
        migrations.RemoveField(
            model_name='statusforclientinfo',
            name='task',
        ),
        migrations.RemoveField(
            model_name='statusforcontractor',
            name='contractor',
        ),
        migrations.RemoveField(
            model_name='statusforcontractorinfo',
            name='status',
        ),
        migrations.RemoveField(
            model_name='statusforcontractorinfo',
            name='task',
        ),
        migrations.RemoveField(
            model_name='task',
            name='client',
        ),
        migrations.RemoveField(
            model_name='task',
            name='contractor',
        ),
        migrations.RemoveField(
            model_name='usersetting',
            name='new_task_status_for_client',
        ),
        migrations.RemoveField(
            model_name='usersetting',
            name='new_task_status_for_contractor',
        ),
        migrations.RemoveField(
            model_name='usersetting',
            name='user',
        ),
        migrations.AddField(
            model_name='contract',
            name='name',
            field=models.CharField(db_column='name', default='test', max_length=100, verbose_name='наименование'),
            preserve_default=False,
        ),
        migrations.DeleteModel(
            name='Comment',
        ),
        migrations.DeleteModel(
            name='StatusForClient',
        ),
        migrations.DeleteModel(
            name='StatusForClientInfo',
        ),
        migrations.DeleteModel(
            name='StatusForContractor',
        ),
        migrations.DeleteModel(
            name='StatusForContractorInfo',
        ),
        migrations.DeleteModel(
            name='Task',
        ),
        migrations.DeleteModel(
            name='UserSetting',
        ),
        migrations.AddField(
            model_name='clientproject',
            name='contract',
            field=models.ForeignKey(db_column='contract', on_delete=django.db.models.deletion.CASCADE, to='app.Contract', verbose_name='договор'),
        ),
        migrations.AddField(
            model_name='clientproject',
            name='contractor',
            field=models.ForeignKey(db_column='contractor', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='исполнитель'),
        ),
    ]
